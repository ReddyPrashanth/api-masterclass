version: "3.8"

x-app-environment: &appEnvironment
  APP_NAME: ${APP_NAME}
  APP_KEY: ${APP_KEY}
  APP_DEBUG: ${APP_DEBUG}
  APP_ENV: ${APP_ENV}
  DB_CONNECTION: ${DB_CONNECTION}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}
  DB_DATABASE: ${DB_DATABASE}
  DB_USERNAME: ${DB_USER}
  DB_PASSWORD: ${DB_PASS}

x-database-environment: &databaseEnvironment
  MYSQL_DATABASE: ${DB_DATABASE}
  MYSQL_USER: ${DB_USER}
  MYSQL_PASSWORD: ${DB_PASS}
  MYSQL_ROOT_PASSWORD: ${DB_PASS}
  SERVICE_TAGS: dev
  SERVICE_NAME: mysql

networks:
  laravel:

services:
  app:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      <<: [*databaseEnvironment]
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel
    environment:
      <<: [*appEnvironment]

  composer:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]
    environment:
      <<: [*appEnvironment]
    networks:
      - laravel
